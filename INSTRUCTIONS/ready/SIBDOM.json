 {
        "_task_id": "SIBDOM_DEBUG_2",
        "_start_urls": [
            "https://altay.sibdom.ru/commercial/prodam/",
            "https://altay.sibdom.ru/commercial/sdam/",
            "https://bur.sibdom.ru/commercial/prodam/",
            "https://bur.sibdom.ru/commercial/sdam/",
            "https://irk.sibdom.ru/commercial/prodam/",
            "https://irk.sibdom.ru/commercial/sdam/",
            "https://kemerovo.sibdom.ru/commercial/prodam/",
            "https://kemerovo.sibdom.ru/commercial/sdam/",
            "https://nsk.sibdom.ru/commercial/prodam/",
            "https://nsk.sibdom.ru/commercial/sdam/",
            "https://omsk.sibdom.ru/commercial/prodam/",
            "https://omsk.sibdom.ru/commercial/sdam/",
            "https://tomsk.sibdom.ru/commercial/prodam/",
            "https://tomsk.sibdom.ru/commercial/sdam/ ",
            "https://www.sibdom.ru/commercial/prodam/",
            "https://www.sibdom.ru/commercial/sdam/"
        ],
        "_segment": "Коммерческая Недвижимость",
        "_operation": "",
        "_federal_subject": "",
        "_source": "https://www.sibdom.ru/",
        "project_id": "metaspider",
        "spider_id": "metacrawler",
        "global_settings": {
            "CONCURRENT_REQUESTS": 256,
            "SPLASH_URL": "http://0.0.0.0:8050",
            "LOG_LEVEL": "INFO",
            "AUTOTHROTTLE_ENABLED": false,
            "AUTOTHROTTLE_START_DELAY": 1,
            "AUTOTHROTTLE_MAX_DELAY": 60,
            "AUTOTHROTTLE_TARGET_CONCURRENCY": 256,
            "CONCURRENT_REQUESTS_PER_DOMAIN": 256,
            "RETRY_ENABLED": true,
            "RETRY_HTTP_CODES": [
                500,
                503,
                502,
                504,
                400,
                403,
                408,
                429,
                505,
                303,
                302,
                301,
                404,
                307,
                410,
                502,
                451
            ],
            "HTTPERROR_ALLOWED_CODES": [],
            "RETRY_TIMES": 20,
            "ROBOTSTXT_ENABLED": false,
            "ROBOTSTXT_OBEY": false,
            "REDIRECT_ENABLED": false,
            "COOKIES_ENABLED": false,
            "DOWNLOAD_FAIL_ON_DATALOSS": false,
            "RANDOM_UA_TYPE": "random",
            "DOWNLOAD_TIMEOUT": 60,
            "CLOSESPIDER_ITEMCOUNT": 0,
            "CLOSESPIDER_ERRORCOUNT": 0
        },
        "methods": {
            "crawling_type": "common",
            "allowed_domains": [],
            "proxy_settings": {
                "types": [
                    "https"
                ],
                "amount": 10000,
                "save": false
            }
        },
        "crawl_tree": [
            {
                "pagination_urls": {
                    "path": "//li[@class = 'page-pagination-item active']/following-sibling::li[1]/a/@href"
                },
                "item_urls": {
                    "path": "//div[@class = 'catalog-product-list catalog-product-list--commercials']/a/@href"
                }
            }
        ],
        "item_page": {
            "fields": {
                "source_latitude": {
                    "type": "float",
                    "path": "//script[contains(., 'POINT')]/text()",
                    "regex": "(?<= )(\\d*\\W?\\d+)(?=\\)\\', selection)",
                    "operations": []
                },
                "address": {
                    "type": "string",
                    "path": "//div[contains(.,'Адрес')]/following-sibling::div[1]/text()",
                    "operations": []
                },
                "purpose": {
                    "type": "string",
                    "path": "//div[@class = 'card-title']/h1/text()",
                    "operations": []
                },
                "source_longitude": {
                    "type": "float",
                    "path": "//script[contains(., 'POINT')]/text()",
                    "regex": "(?<=centroid: \\'POINT\\()(\\d*\\W?\\d+)(?= )",
                    "operations": []
                },
                "area_total": {
                    "type": "string",
                    "path": "(//div[contains(.,'площадь')]/following-sibling::div[1]/text())[1]",
                    "regex": "([^;]*)(?= м)",
                    "operations": []
                },
                "seller_name": {
                    "type": "string",
                    "path": "//div[@class = 'card-feedback-contacts ']/a/text()",
                    "operations": []
                },
                "date_info": {
                    "type": "date",
                    "time": "now",
                    "operations": []
                },
                "operation": {
                    "type": "string",
                    "path": "//div[@class = 'card-title']/h1/text()",
                    "operations": []
                },
                "date_created": {
                    "type": "date",
                    "path": "(//a[@class = 'breadcrumbs-link']/text())[last()]",
                    "time": "from string",
                    "regex": "(?<=но )([^;]*)(?=\\,)",
                    "operations": []
                },
                "title_name": {
                    "type": "string",
                    "path": "//div[@class = 'card-title']/h1/text()",
                    "operations": []
                },
                "price_total": {
                    "type": "string",
                    "path": "//span[@class = 'card-banner-price--full']/text()",
                    "regex": "(?<=                                  )([^;]*)(?= руб)",
                    "operations": []
                },
                "federal_subject": {
                    "type": "string",
                    "path": "//div[@class = 'header-location']/span/text()",
                    "operations": []
                },
                "wall_material": {
                    "type": "string",
                    "path": "(//div[contains(.,'атериал')]/following-sibling::div[1]/text())[1]",
                    "operations": []
                },
                "description": {
                    "type": "list_to_string",
                    "path": "//div[@class = 'card-text card-description']/p/text()",
                    "operations": []
                },
                "floor": {
                    "type": "string",
                    "path": "(//div[contains(.,'Этаж')]/following-sibling::div[1]/text())[1]",
                    "regex": "\\d+",
                    "operations": []
                }
            }
        }
    }